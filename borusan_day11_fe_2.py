# -*- coding: utf-8 -*-
"""borusan_day11_fe_2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lHgWJ2QG1uiBDIHxsTeF9mtwzBboX-1D
"""

import numpy as np
import pandas as pd
import time
import sys
import matplotlib.pyplot as plt

df = pd.read_csv("engine_data.csv")

numeric_cols = ["Engine rpm","Lub oil pressure","Fuel pressure","Coolant pressure","lub oil temp","Coolant temp","Engine Condition" ]

for col in numeric_cols:
  df[col] = pd.to_numeric(df[col],errors = 'coerce')
  #eksik değer varsa bunları median ile dolduracak.
  if df[col].isna().any():
    med = df[col].median()
    df[col].fillna(med, inplace=True)

mins = df[numeric_cols].min(axis=0)
maxs = df[numeric_cols].max(axis=0)

def min_max_scale(X: pd.DataFrame, mins: pd.Series, maxs:pd.Series, feature_range=(0,1)) -> pd.DataFrame:
  X = X.copy().astype(float)
  min_range, max_range = feature_range
  denom = (maxs- mins).replace(0, 1.0 )
  X_scaled = (X - mins) / denom
  return X_scaled * (max_range - min_range) + min_range

#Standardizasyon

def standard_scale(X):
  X = X.astype(float)
  mean = X.mean(axis=0)
  std = X.std(axis=0, ddof=0).replace(0,1.0) #ddof = Delta Degrees of Freedom
  return ( X - mean) / std

# Ölçeklenmiş Veri Setleri

X = df[numeric_cols]

t0 = time.time()
X_minmax = min_max_scale(X, mins, maxs, feature_range=(0,1))
t1 = time.time()
X_standard = standard_scale(X)
t2 = time.time()

print("MinMax Scale İşlem Süresi(s):" ,round(t1-t0, 6))
print("Standardizasyon işlem Süresi (s):", round(t2-t0, 6))

#byte cinsinden işlemlerin bellek kullanımı

print("Bellek Kullanımı(byte):")
print(" Orijinal:", sys.getsizeof(X.values))
print(" Min-Max:", sys.getsizeof(X_minmax.values))
print(" Standardizasyon:", sys.getsizeof(X_standard.values))

plt.figure(figsize=(12,5))
plt.subplot(1,2,1)
plt.boxplot([X[col] for col in numeric_cols], labels = numeric_cols )
plt.title("Orijinal Dağılımlar")

plt.subplot(1,2,2)
plt.boxplot([X_minmax[col] for col in numeric_cols], labels = numeric_cols)
plt.title("Min-Max Sonrası Dağılımlar(0-1)")
plt.tight_layout()
plt.show()

plt.figure(figsize = (12,5))
plt.hist(df["Engine rpm"])
plt.show()

plt.figure(figsize = (12,5))
plt.hist(X_minmax["Engine rpm"])
plt.show()

plt.figure(figsize = (12,5))
plt.hist(X_standard["Engine rpm"])
plt.show()

import seaborn as sns

sns.pairplot(df[numeric_cols],diag_kind="kde",corner=True,hue="Engine Condition",palette="Set2" ,plot_kws = {"alpha":0.5,"s":30})
plt.suptitle("Scatter Matris Grafikleri")
plt.show()



